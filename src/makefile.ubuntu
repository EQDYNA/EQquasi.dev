#!/bin/bash

# This makefile file is part of software EQquasi.

# This makefile is to compile EQquasi v1.3.0 with MUMPS, a high-performance, 
# for Ubuntu.

netcdf_incdir = ${TACC_NETCDF_INC}
netcdf_libdir = ${TACC_NETCDF_LIB}

F90 = ${FC}
OPT = -c ${FLAG} 
OPT1 = ${FLAG}
OBJ = eqquasi.o globalvar.o mesh4num.o meshgen.o main.o c8g2.o shl.o faulting.o fric.o library_bound.o \
		library_output.o crs.o elemcal.o read_input.o msr.o func_lib.o netcdf_io.o\
		
clean : eqquasi
	rm -r *.o
	
eqquasi: $(OBJ) 
	$(F90) $(OPT1) $(OBJ) -o eqquasi -ldmumps -lmumps_common -lpord -lscalapack-openmpi -lblas -llapack -L$(netcdf_libdir) -lnetcdf -L$(netcdf_libdir) -lnetcdff
	
eqquasi.o: eqquasi.f90 main.o globalvar.o mesh4num.o meshgen.o faulting.o fric.o library_bound.o \
			library_output.o crs.o elemcal.o read_input.o msr.o func_lib.o netcdf_io.o
	$(F90) $(OPT) eqquasi.f90 
globalvar.o:  globalvar.f90
	$(F90) $(OPT) globalvar.f90 	
mesh4num.o:  mesh4num.f90  globalvar.o
	$(F90) $(OPT) mesh4num.f90
meshgen.o:  meshgen.f90 globalvar.o func_lib.o
	$(F90) $(OPT) meshgen.f90
main.o: main.f90 globalvar.o c8g2.o shl.o faulting.o fric.o library_bound.o library_output.o crs.o elemcal.o netcdf_io.o
	$(F90) $(OPT) main.f90	-I${incdir}		
#main_aztec.o: main_aztec.f90 globalvar.o c8g2.o shl.o faulting.o fric.o library_bound.o library_output.o msr.o elemcal_aztec.o 
#	$(F90) $(OPT) main_aztec.f90 -I${inc_dir_aztec}		
c8g2.o:  c8g2.f90 globalvar.o shl.o
	$(F90) $(OPT) c8g2.f90	
shl.o:  shl.f90 globalvar.o
	$(F90) $(OPT) shl.f90
faulting.o:  faulting.f90 fric.o globalvar.o library_output.o func_lib.o
	$(F90) $(OPT) faulting.f90		
fric.o: fric.f90 globalvar.o
	$(F90) $(OPT) fric.f90		
library_bound.o: library_bound.f90  globalvar.o
	$(F90) $(OPT) library_bound.f90
library_output.o: library_output.f90  globalvar.o
	$(F90) $(OPT) library_output.f90
crs.o : crs.f90  globalvar.o
	$(F90) $(OPT) crs.f90
elemcal.o : elemcal.f90  globalvar.o
	$(F90) $(OPT) elemcal.f90	
#elemcal_aztec.o : elemcal_aztec.f90  globalvar.o
#	$(F90) $(OPT) elemcal_aztec.f90		
msr.o : msr.f90  globalvar.o
	$(F90) $(OPT) msr.f90		
read_input.o: read_input.f90 globalvar.o
	$(F90) $(OPT) read_input.f90
func_lib.o: func_lib.f90
	$(F90) $(OPT) func_lib.f90
netcdf_io.o: netcdf_io.f90 
	$(F90) $(OPT) netcdf_io.f90 -I${netcdf_incdir}	
